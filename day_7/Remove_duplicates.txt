Remove duplicates from array
arr[10]={1,2,3,4,5,3,7,5,9,-999};-999-->terminating condition

Version 1)

#include<stdio.h>
int main(){
	int i,j,arr[50]={1,2,3,4,5,3,7,5,9,-999};
	void del_arr(int *,int);
	for(i=0;arr[i]!=-999;i++){
		for(j=i+1;arr[j]!=-999;j++){

			if(arr[i] == arr[j]){
				del_arr(arr,j);
			}
		}

	}
}

void del_arr(int *p,int pos){
	int i;
	for(i=pos;p[i]!=-999;i++){
		p[i]=p[i+1];
	}
}

----------------------------------------------------------------
Version 2)

#include<stdio.h>
int main(){
	int i,j,tar[50],tar_index=-1,flag=0,arr[50]={1,2,3,4,5,3,7,5,9,-999};
	for(i=0;arr[i]!=-999;i++){
		flag=0;
		for(j=0;j<=tar_index;j++){
		if(arr[i]==tar[j]){
		flag =1;break;
		}
		if(flag == 0){
			tar_index=tar_index+1;
			tar[tar_index]=arr[i];
		}

		}
	}
	tar_index++;
	tar[tar_index] =-999;

	for(i=0;tar[i]!=-999;i++){
		printf(" %d,",tar[i]);
	}


}

---------------------------------------------------

given a sorted aray and number x,find the pair in array whose sum is closedt to x;
Example 
input: arr[]={10,22,28,29,30,40} x=54
op =22 and 30

ip: arr[]={1,3,4,7,10} x=15
op: 4 and 10








#include<stdio.h>
#include<math.h>
int main(){
	int i,j,resi,resj,sum,diff,arr[]={10,22,28,29,30,40},x=54;
	sum=arr[0]+arr[1];
	diff=abs(sum-x);
	for(i=0;i<6;i++){
		for(j=i+1;j<6;j++){
			sum =arr[i]+arr[j];
			if(abs(sum-x) <diff){
				resi =i;
				resj =j;
				diff=abs(sum-x);

			}
		}
	}
	printf(" %d and %d" ,arr[resi],arr[resj]);
	return 0;
}